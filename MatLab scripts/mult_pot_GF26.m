%% Módulo para multiplicación de alphas GF(2^6)
% Entradas: alpha 1 en notacion de potencia, alpha 2 en notación de
%           potencia
% Salida: vector binario de alpha resultante y potencia de alpha
function [vec_bin, pot_alpha] = mult_pot_GF26(pot_1, pot_2, signo)
    gf_26 = {[0,0,0,0,0,1] [0,0,0,0,1,0] [0,0,0,1,0,0] [0,0,1,0,0,0] [0,1,0,0,0,0] [1,0,0,0,0,0] [0,0,0,0,1,1] [0,0,0,1,1,0] [0,0,1,1,0,0] [0,1,1,0,0,0] [1,1,0,0,0,0] [1,0,0,0,1,1] [0,0,0,1,0,1] [0,0,1,0,1,0] [0,1,0,1,0,0] [1,0,1,0,0,0] [0,1,0,0,1,1] [1,0,0,1,1,0] [0,0,1,1,1,1] [0,1,1,1,1,0] [1,1,1,1,0,0] [1,1,1,0,1,1] [1,1,0,1,0,1] [1,0,1,0,0,1] [0,1,0,0,0,1] [1,0,0,0,1,0] [0,0,0,1,1,1] [0,0,1,1,1,0] [0,1,1,1,0,0] [1,1,1,0,0,0] [1,1,0,0,1,1] [1,0,0,1,0,1] [0,0,1,0,0,1] [0,1,0,0,1,0] [1,0,0,1,0,0] [0,0,1,0,1,1] [0,1,0,1,1,0] [1,0,1,1,0,0] [0,1,1,0,1,1] [1,1,0,1,1,0] [1,0,1,1,1,1] [0,1,1,1,0,1] [1,1,1,0,1,0] [1,1,0,1,1,1] [1,0,1,1,0,1] [0,1,1,0,0,1] [1,1,0,0,1,0] [1,0,0,1,1,1] [0,0,1,1,0,1] [0,1,1,0,1,0] [1,1,0,1,0,0] [1,0,1,0,1,1] [0,1,0,1,0,1] [1,0,1,0,1,0] [0,1,0,1,1,1] [1,0,1,1,1,0] [0,1,1,1,1,1] [1,1,1,1,1,0] [1,1,1,1,1,1] [1,1,1,1,0,1] [1,1,1,0,0,1] [1,1,0,0,0,1] [1,0,0,0,0,1]};
     if signo ~= 0
        pot_val = pot_1 + pot_2;
        index = mod(pot_val, numel(gf_26));
        vec_bin = gf_26{index+1};
        pot_alpha = index;    
    else
        if pot_1 == -1 || pot_2 == -1
            vec_bin = [0 0 0 0 0 0];
            pot_alpha = -1;
        else
            pot_val = pot_1 + pot_2;
            index = mod(pot_val, numel(gf_26));
            vec_bin = gf_26{index+1};
            pot_alpha = index;    
        end
    end
end